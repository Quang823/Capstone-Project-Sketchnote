import React, { useState } from "react";
import {
  View,
  Text,
  ScrollView,
  Pressable,
  Alert,
  Dimensions,
} from "react-native";
import { useNavigation, useRoute } from "@react-navigation/native";
import Icon from "react-native-vector-icons/MaterialIcons";
import { LinearGradient } from "expo-linear-gradient";
import { checkoutStyles } from "./CheckoutScreen.styles";

const { width: SCREEN_WIDTH } = Dimensions.get("window");

export default function CheckoutScreen() {
  const navigation = useNavigation();
  const route = useRoute();
  const { cartItems = [], totalAmount = 0 } = route.params || {};

  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState("wallet");

  // üì¶ Format helpers
  const formatCurrency = (amount) =>
    (amount ?? 0).toLocaleString("vi-VN") + " VND";

  // üí≥ Payment methods
  const paymentMethods = [
    {
      id: "wallet",
      name: "V√≠ ƒëi·ªán t·ª≠",
      icon: "üíé",
      description: "Thanh to√°n b·∫±ng v√≠ Skatenote",
      fee: "Mi·ªÖn ph√≠",
    },
    {
      id: "card",
      name: "Th·∫ª t√≠n d·ª•ng",
      icon: "üí≥",
      description: "Visa, Mastercard",
      fee: "2.5% ph√≠",
    },
  ];

  // üõí Handle payment
  const handlePayment = () => {
    if (selectedPaymentMethod === "wallet") {
      // Thanh to√°n b·∫±ng v√≠
      Alert.alert(
        "X√°c nh·∫≠n thanh to√°n",
        `B·∫°n s·∫Ω thanh to√°n ${formatCurrency(totalAmount)} t·ª´ v√≠ Skatenote?`,
        [
          { text: "H·ªßy", style: "cancel" },
          {
            text: "X√°c nh·∫≠n",
            onPress: () => {
              Alert.alert("Th√†nh c√¥ng", "ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω!");
              navigation.navigate("Home");
            },
          },
        ]
      );
    } else {
      // Thanh to√°n b·∫±ng th·∫ª
      Alert.alert(
        "Th√¥ng b√°o",
        "T√≠nh nƒÉng thanh to√°n b·∫±ng th·∫ª ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn"
      );
    }
  };

  return (
    <View style={checkoutStyles.container}>
      {/* Header */}
      <View style={checkoutStyles.header}>
        <Pressable onPress={() => navigation.goBack()}>
          <Icon name="arrow-back" size={24} color="#1F2937" />
        </Pressable>
        <Text style={checkoutStyles.headerTitle}>Thanh to√°n</Text>
        <View style={{ width: 24 }} />
      </View>

      <ScrollView style={checkoutStyles.content} showsVerticalScrollIndicator={false}>
        {/* üí≥ Payment Card */}
        <LinearGradient
          colors={["#667EEA", "#764BA2"]}
          start={{ x: 0, y: 0 }}
          end={{ x: 1, y: 1 }}
          style={checkoutStyles.paymentCard}
        >
          <View style={checkoutStyles.cardHeader}>
            <Text style={checkoutStyles.cardTitle}>Thanh to√°n</Text>
            <View style={checkoutStyles.cardIconContainer}>
              <Text style={checkoutStyles.cardIcon}>üí≥</Text>
            </View>
          </View>

          <Text style={checkoutStyles.totalAmount}>
            {formatCurrency(totalAmount)}
          </Text>

          <Text style={checkoutStyles.cardSubtitle}>
            {cartItems.length} s·∫£n ph·∫©m trong gi·ªè h√†ng
          </Text>
        </LinearGradient>

        {/* üõí Order Summary */}
        <View style={checkoutStyles.summarySection}>
          <Text style={checkoutStyles.sectionTitle}>ƒê∆°n h√†ng</Text>
          
          {cartItems.map((item, index) => (
            <View key={index} style={checkoutStyles.orderItem}>
              <View style={checkoutStyles.orderItemInfo}>
                <Text style={checkoutStyles.orderItemName} numberOfLines={2}>
                  {item.name}
                </Text>
                <Text style={checkoutStyles.orderItemPrice}>
                  {formatCurrency(item.price * item.quantity)}
                </Text>
              </View>
              <Text style={checkoutStyles.orderItemQuantity}>
                x{item.quantity}
              </Text>
            </View>
          ))}

          <View style={checkoutStyles.orderTotal}>
            <Text style={checkoutStyles.orderTotalLabel}>T·ªïng c·ªông</Text>
            <Text style={checkoutStyles.orderTotalAmount}>
              {formatCurrency(totalAmount)}
            </Text>
          </View>
        </View>

        {/* üí∞ Payment Methods */}
        <View style={checkoutStyles.paymentSection}>
          <Text style={checkoutStyles.sectionTitle}>Ph∆∞∆°ng th·ª©c thanh to√°n</Text>
          
          {paymentMethods.map((method) => (
            <Pressable
              key={method.id}
              style={[
                checkoutStyles.paymentMethod,
                selectedPaymentMethod === method.id && checkoutStyles.selectedPaymentMethod,
              ]}
              onPress={() => setSelectedPaymentMethod(method.id)}
            >
              <View style={checkoutStyles.paymentMethodLeft}>
                <Text style={checkoutStyles.paymentIcon}>{method.icon}</Text>
                <View style={checkoutStyles.paymentInfo}>
                  <Text style={checkoutStyles.paymentName}>{method.name}</Text>
                  <Text style={checkoutStyles.paymentDescription}>
                    {method.description}
                  </Text>
                </View>
              </View>
              
              <View style={checkoutStyles.paymentMethodRight}>
                <Text style={checkoutStyles.paymentFee}>{method.fee}</Text>
                {selectedPaymentMethod === method.id && (
                  <Icon name="check-circle" size={24} color="#3B82F6" />
                )}
              </View>
            </Pressable>
          ))}
        </View>

        {/* üì± Digital Delivery Notice */}
        <View style={checkoutStyles.deliveryNotice}>
          <View style={checkoutStyles.deliveryIconContainer}>
            <Icon name="cloud-download" size={24} color="#10B981" />
          </View>
          <View style={checkoutStyles.deliveryTextContainer}>
            <Text style={checkoutStyles.deliveryTitle}>Giao h√†ng s·ªë</Text>
            <Text style={checkoutStyles.deliveryDescription}>
              S·∫£n ph·∫©m s·∫Ω ƒë∆∞·ª£c giao tr·ª±c ti·∫øp v√†o t√†i kho·∫£n c·ªßa b·∫°n sau khi thanh to√°n th√†nh c√¥ng
            </Text>
          </View>
        </View>
      </ScrollView>

      {/* üí≥ Payment Button */}
      <View style={checkoutStyles.paymentButtonContainer}>
        <Pressable style={checkoutStyles.paymentButton} onPress={handlePayment}>
          <LinearGradient
            colors={["#3B82F6", "#1D4ED8"]}
            start={{ x: 0, y: 0 }}
            end={{ x: 1, y: 0 }}
            style={checkoutStyles.paymentButtonGradient}
          >
            <Icon name="payment" size={20} color="#FFFFFF" />
            <Text style={checkoutStyles.paymentButtonText}>
              Thanh to√°n {formatCurrency(totalAmount)}
            </Text>
          </LinearGradient>
        </Pressable>
      </View>
    </View>
  );
}
