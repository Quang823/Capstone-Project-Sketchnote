// services/projectService.js
import { projectAPIController } from "../api/projectAPIController";

export const projectService = {
  /**
   * Upload d·ªØ li·ªáu 1 trang (CanvasContainer) l√™n cloud
   * @param {object} dataObject - d·ªØ li·ªáu JSON c·∫ßn l∆∞u
   * @param {string} fileName - t√™n file mu·ªën l∆∞u (v√≠ d·ª•: "Test-123")
   * @returns {Promise<string>} - tr·∫£ v·ªÅ URL file sau khi upload
   */
  uploadProjectFile: async (dataObject, fileName = "Test123") => {
    try {
      // Lo·∫°i content g·ª≠i cho backend (ƒë·ªÉ t·∫°o presign)
      const presignContentType = "JSON"; // backend b·∫°n c·∫ßn "JSON" d·∫°ng string
      // Lo·∫°i content th·ª±c t·∫ø khi PUT l√™n S3
      const uploadContentType = "application/json";

      // üü¢ B1: L·∫•y presigned URL t·ª´ backend
      const presignRes = await projectAPIController.getPresign(
        fileName,
        presignContentType
      );

      if (!presignRes?.data?.result) {
        throw new Error("Invalid presign response");
      }

      const { uploadUrl, strokeUrl } = presignRes.data.result;


      // üü¢ B2: Upload d·ªØ li·ªáu JSON l√™n S3 b·∫±ng fetch PUT
      const putRes = await fetch(uploadUrl, {
        method: "PUT",
        headers: { "Content-Type": uploadContentType },
        body: JSON.stringify(dataObject),
      });

      if (!putRes.ok) {
        const errText = await putRes.text();
        throw new Error(`Upload failed: ${putRes.status} - ${errText}`);
      }

      
      return strokeUrl;
    } catch (err) {
      console.error(`‚ùå Upload ${fileName} th·∫•t b·∫°i:`, err);
      throw err;
    }
  },

  getProjectFile: async (url) => {
    try {
      const res = await fetch(url, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!res.ok) {
        const errText = await res.text();
        throw new Error(`HTTP ${res.status}: ${errText}`);
      }

      const text = await res.text(); // ƒë·ªçc raw text ƒë·ªÉ ki·ªÉm tra CORS
      const data = JSON.parse(text);
      return data;
    } catch (err) {
      console.error("‚ùå L·ªói t·∫£i JSON:", err);
      throw err;
    }
  },
};
